"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var app = getApp();
Page({
    data: {
        TabCur: 0,
        scrollLeft: 0,
        obj: [],
        scheduleDay: [],
        numOfWeek: 0
    },
    tabSelect: function (e) {
        var _this = this;
        console.log(e);
        console.log(this.data.scheduleDay);
        this.setData({
            TabCur: e.currentTarget.dataset.id
        });
        this.setData({
            obj: this.data.scheduleDay.filter(function (item) { return item.position.dayOfWeek == _this.data.TabCur && item.active.indexOf(_this.data.numOfWeek) != -1; })
        });
    },
    onLoad: function () {
        var _this = this;
        var sch = [];
        sch.push({
            courseID: "qw123",
            active: [2, 3, 4],
            position: {
                dayOfWeek: 0,
                indexOfDay: [0, 1, 2]
            },
            info: {
                name: "高等数学",
                teacher: "祖冲之",
                location: "III-105"
            }
        }, {
            courseID: "qw124",
            active: [2, 3, 4],
            position: {
                dayOfWeek: 0,
                indexOfDay: [3, 4]
            },
            info: {
                name: "毛泽东思想与中国特色社会主义理论体系概论",
                teacher: "冯友兰·茅以升",
                location: "IV-C108"
            }
        }, {
            courseID: "qw125",
            active: [2, 3, 4],
            position: {
                dayOfWeek: 1,
                indexOfDay: [0, 1, 2]
            },
            info: {
                name: "计算机组成原理",
                teacher: "侯捷",
                location: "I-205"
            }
        });
        var week = 2;
        this.setData({
            scheduleDay: sch,
            numOfWeek: week
        });
        this.setData({
            obj: this.data.scheduleDay.filter(function (item) { return item.position.dayOfWeek == 0 && item.active.indexOf(_this.data.numOfWeek) != -1; })
        });
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291cnNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY291cnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EsSUFBTSxHQUFHLEdBQUcsTUFBTSxFQUFVLENBQUE7QUFFNUIsSUFBSSxDQUFDO0lBQ0QsSUFBSSxFQUFFO1FBQ0YsTUFBTSxFQUFFLENBQUM7UUFDVCxVQUFVLEVBQUUsQ0FBQztRQUNiLEdBQUcsRUFBRSxFQUFFO1FBQ1AsV0FBVyxFQUFFLEVBQUU7UUFDZixTQUFTLEVBQUUsQ0FBQztLQUNmO0lBQ0QsU0FBUyxZQUFDLENBQWM7UUFBeEIsaUJBU0M7UUFSRyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDVCxNQUFNLEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRTtTQUNyQyxDQUFDLENBQUE7UUFDRixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxJQUFJLEtBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQTdGLENBQTZGLENBQUM7U0FDM0ksQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUNELE1BQU07UUFBTixpQkEwREM7UUF6REcsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFBO1FBQ1osR0FBRyxDQUFDLElBQUksQ0FBQztZQUNELFFBQVEsRUFBRSxPQUFPO1lBQ2pCLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO1lBQ2YsUUFBUSxFQUFFO2dCQUNOLFNBQVMsRUFBRSxDQUFDO2dCQUNaLFVBQVUsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO2FBQ3RCO1lBQ0QsSUFBSSxFQUFFO2dCQUNGLElBQUksRUFBRSxNQUFNO2dCQUNaLE9BQU8sRUFBRSxLQUFLO2dCQUNkLFFBQVEsRUFBRSxTQUFTO2FBQ3RCO1NBQ0osRUFDRDtZQUNJLFFBQVEsRUFBRSxPQUFPO1lBQ2pCLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO1lBQ2YsUUFBUSxFQUFFO2dCQUNOLFNBQVMsRUFBRSxDQUFDO2dCQUNaLFVBQVUsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUM7YUFDcEI7WUFDRCxJQUFJLEVBQUU7Z0JBQ0YsSUFBSSxFQUFFLHNCQUFzQjtnQkFDNUIsT0FBTyxFQUFFLFNBQVM7Z0JBQ2xCLFFBQVEsRUFBRSxTQUFTO2FBQ3RCO1NBQ0osRUFDRDtZQUNJLFFBQVEsRUFBRSxPQUFPO1lBQ2pCLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO1lBQ2YsUUFBUSxFQUFFO2dCQUNOLFNBQVMsRUFBRSxDQUFDO2dCQUNaLFVBQVUsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO2FBQ3RCO1lBQ0QsSUFBSSxFQUFFO2dCQUNGLElBQUksRUFBRSxTQUFTO2dCQUNmLE9BQU8sRUFBRSxJQUFJO2dCQUNiLFFBQVEsRUFBRSxPQUFPO2FBQ3BCO1NBQ0osQ0FBQyxDQUFBO1FBQ04sSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFBO1FBQ1osSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULFdBQVcsRUFBRSxHQUFHO1lBQ2hCLFNBQVMsRUFBRSxJQUFJO1NBQ2xCLENBQUMsQ0FBQTtRQUNGLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDVCxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQTlFLENBQThFLENBQUM7U0FDNUgsQ0FBQyxDQUFBO0lBVU4sQ0FBQztDQTBCSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTXlBcHAgfSBmcm9tICcuLi8uLi9hcHAnXHJcbmltcG9ydCB7IHNjaGVkdWxlUmVzIH0gZnJvbSAnLi4vLi4vdXRpbHMvY291cnNlL2NvdXJzZVJlcydcclxuXHJcbmNvbnN0IGFwcCA9IGdldEFwcDxJTXlBcHA+KClcclxuXHJcblBhZ2Uoe1xyXG4gICAgZGF0YToge1xyXG4gICAgICAgIFRhYkN1cjogMCxcclxuICAgICAgICBzY3JvbGxMZWZ0OiAwLFxyXG4gICAgICAgIG9iajogW10sXHJcbiAgICAgICAgc2NoZWR1bGVEYXk6IFtdLFxyXG4gICAgICAgIG51bU9mV2VlazogMFxyXG4gICAgfSxcclxuICAgIHRhYlNlbGVjdChlOiB3eC5UYXBFdmVudCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGUpXHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5kYXRhLnNjaGVkdWxlRGF5KVxyXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgICAgIFRhYkN1cjogZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuaWRcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgICAgIG9iajogdGhpcy5kYXRhLnNjaGVkdWxlRGF5LmZpbHRlcihpdGVtID0+IGl0ZW0ucG9zaXRpb24uZGF5T2ZXZWVrID09IHRoaXMuZGF0YS5UYWJDdXIgJiYgaXRlbS5hY3RpdmUuaW5kZXhPZih0aGlzLmRhdGEubnVtT2ZXZWVrKSAhPSAtMSlcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICBsZXQgc2NoID0gW11cclxuICAgICAgICBzY2gucHVzaCh7XHJcbiAgICAgICAgICAgICAgICBjb3Vyc2VJRDogXCJxdzEyM1wiLFxyXG4gICAgICAgICAgICAgICAgYWN0aXZlOiBbMiwzLDRdLFxyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHtcclxuICAgICAgICAgICAgICAgICAgICBkYXlPZldlZWs6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhPZkRheTogWzAsMSwyXVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGluZm86IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIumrmOetieaVsOWtplwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHRlYWNoZXI6IFwi56WW5Yay5LmLXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbG9jYXRpb246IFwiSUlJLTEwNVwiXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNvdXJzZUlEOiBcInF3MTI0XCIsXHJcbiAgICAgICAgICAgICAgICBhY3RpdmU6IFsyLDMsNF0sXHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgICAgIGRheU9mV2VlazogMCxcclxuICAgICAgICAgICAgICAgICAgICBpbmRleE9mRGF5OiBbMyw0XVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGluZm86IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIuavm+azveS4nOaAneaDs+S4juS4reWbveeJueiJsuekvuS8muS4u+S5ieeQhuiuuuS9k+ezu+amguiuulwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHRlYWNoZXI6IFwi5Yav5Y+L5YWwwrfojIXku6XljYdcIixcclxuICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbjogXCJJVi1DMTA4XCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY291cnNlSUQ6IFwicXcxMjVcIixcclxuICAgICAgICAgICAgICAgIGFjdGl2ZTogWzIsMyw0XSxcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF5T2ZXZWVrOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGluZGV4T2ZEYXk6IFswLDEsMl1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBpbmZvOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCLorqHnrpfmnLrnu4TmiJDljp/nkIZcIixcclxuICAgICAgICAgICAgICAgICAgICB0ZWFjaGVyOiBcIuS+r+aNt1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uOiBcIkktMjA1XCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICBsZXQgd2VlayA9IDJcclxuICAgICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgICAgICBzY2hlZHVsZURheTogc2NoLFxyXG4gICAgICAgICAgICBudW1PZldlZWs6IHdlZWtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgICAgIG9iajogdGhpcy5kYXRhLnNjaGVkdWxlRGF5LmZpbHRlcihpdGVtID0+IGl0ZW0ucG9zaXRpb24uZGF5T2ZXZWVrID09IDAgJiYgaXRlbS5hY3RpdmUuaW5kZXhPZih0aGlzLmRhdGEubnVtT2ZXZWVrKSAhPSAtMSlcclxuICAgICAgICB9KVxyXG4gICAgICAgIC8qXHJcbiAgICAgICAgUHJvbWlzZS5hbGwoW3RoaXMuY291cnNlU2NoZWR1bGUoKV0pXHJcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIFRPRE/mlbDmja7nu5HlrprliLB0aGlzXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgocmVhc29uKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZWFzb24pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICovXHJcbiAgICB9LFxyXG4gICAgLypcclxuICAgIGFzeW5jIGNvdXJzZVNjaGVkdWxlKCkge1xyXG4gICAgICAgIGxldCByZXMgPSBhd2FpdCBuZXcgUHJvbWlzZTxzY2hlZHVsZVJlcz4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICB3eC5yZXF1ZXN0KHtcclxuICAgICAgICAgICAgICAgIHVybDogYXBwLmdsb2JhbERhdGEuaG9zdE5hbWUgKyAnL2NvdXJzZXMvY291cnNlJyxcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbGxlZ2U6IGFwcC5nbG9iYWxEYXRhLmNvbGxlZ2UsXHJcbiAgICAgICAgICAgICAgICAgICAgcGVyc29uSUQ6IGFwcC5nbG9iYWxEYXRhLnBlcnNvbklEXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogKHsgZGF0YSB9KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSg8c2NoZWR1bGVSZXM+ZGF0YSlcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmYWlsOiByZWplY3RcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgICAgIGlmIChyZXMuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgICAgICAgICAgc2NoZWR1bGVEYXk6IHJlcy5yZXN1bHRcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgIH1cclxuICAgIHJldHVybiByZXMuc3VjY2Vzc1xyXG4gICAgfVxyXG4gICAgKi9cclxufSlcclxuIl19